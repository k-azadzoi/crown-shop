{"ast":null,"code":"var _jsxFileName = \"/Users/k-charette/Desktop/repos/crown-shop/src/components/sign-in/SignIn.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/FormInput\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user-actions\";\nimport \"./sign-in-styles.scss\";\n\nconst SignIn = ({\n  googleSignInStart,\n  emailSignInStart\n}) => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = user;\n    emailSignInStart(email, password); // try {\n    // \tawait auth.signInWithEmailAndPassword(email, password);\n    // \tsetUser({ email: \"\", password: \"\" });\n    // } catch (error) {\n    // \tconsole.log(error);\n    // }\n  };\n\n  const handleChange = event => {\n    setUser({ ...user,\n      [event.currentTarget.id]: event.currentTarget.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" I already have an account \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    id: \"email\",\n    type: \"email\",\n    label: \"email\",\n    handleChange: handleChange,\n    value: user.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    id: \"password\",\n    type: \"password\",\n    label: \"password\",\n    handleChange: handleChange,\n    value: user.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" Sign In \"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Sign In With Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/k-charette/Desktop/repos/crown-shop/src/components/sign-in/SignIn.js"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","user","setUser","email","password","handleSubmit","event","preventDefault","handleChange","currentTarget","id","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/FormInput\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport {\n\tgoogleSignInStart,\n\temailSignInStart\n} from \"../../redux/user/user-actions\";\n\nimport \"./sign-in-styles.scss\";\n\nconst SignIn = ({ googleSignInStart, emailSignInStart }) => {\n\tconst [user, setUser] = useState({\n\t\temail: \"\",\n\t\tpassword: \"\"\n\t});\n\n\tconst handleSubmit = async event => {\n\t\tevent.preventDefault();\n\t\tconst { email, password } = user;\n\t\temailSignInStart(email, password);\n\n\t\t// try {\n\t\t// \tawait auth.signInWithEmailAndPassword(email, password);\n\t\t// \tsetUser({ email: \"\", password: \"\" });\n\t\t// } catch (error) {\n\t\t// \tconsole.log(error);\n\t\t// }\n\t};\n\n\tconst handleChange = event => {\n\t\tsetUser({\n\t\t\t...user,\n\t\t\t[event.currentTarget.id]: event.currentTarget.value\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"sign-in\">\n\t\t\t<h2> I already have an account </h2>\n\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tlabel=\"email\"\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tvalue={user.email}\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tvalue={user.password}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t<CustomButton type=\"submit\"> Sign In </CustomButton>\n\t\t\t\t\t<CustomButton\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={googleSignInStart}\n\t\t\t\t\t\tisGoogleSignIn\n\t\t\t\t\t>\n\t\t\t\t\t\tSign In With Google\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) =>\n\t\tdispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}