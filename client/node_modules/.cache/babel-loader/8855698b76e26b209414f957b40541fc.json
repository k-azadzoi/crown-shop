{"ast":null,"code":"var _jsxFileName = \"/Users/k-charette/Desktop/repos/crown-shop/src/pages/shop/Shop.js\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop-actions\";\nimport CollectionsOverview from \"../../components/collections-overview/CollectionsOverview\";\nimport CollectionPage from \"../collection/Collection\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nconsole.log(\"Hi\"); //convert functional component to a class component\n\nclass Shop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  //fetch the collections array from firestore with componentDidMount()\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/k-charette/Desktop/repos/crown-shop/src/pages/shop/Shop.js"],"names":["React","Route","connect","updateCollections","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","console","log","Shop","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","props","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKAC,OAAO,CAACC,GAAR,CAAY,IAAZ,E,CACA;;AACA,MAAMC,IAAN,SAAmBV,KAAK,CAACW,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAElCC,uBAFkC,GAER,IAFQ;AAAA;;AAIlC;AACAC,EAAAA,iBAAiB,GAAG;AACnB,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,SAAKH,uBAAL,GAA+BE,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzE,YAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYS,cAAZ;AACA,KAH8B,CAA/B;AAIA;;AAEDC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAElB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAG,GAAEgB,KAAK,CAACE,IAAK,gBADrB;AAEC,MAAA,SAAS,EAAEjB,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AASA;;AAxBiC;;AA2BnC,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACvCrB,EAAAA,iBAAiB,EAAEe,cAAc,IAChCM,QAAQ,CAACrB,iBAAiB,CAACe,cAAD,CAAlB;AAF8B,CAAL,CAAnC;;AAKA,eAAehB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCb,IAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { updateCollections } from \"../../redux/shop/shop-actions\";\n\nimport CollectionsOverview from \"../../components/collections-overview/CollectionsOverview\";\nimport CollectionPage from \"../collection/Collection\";\n\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nconsole.log(\"Hi\");\n//convert functional component to a class component\nclass Shop extends React.Component {\n\t//will be a snapshot reprenstation of the collections array that we get from firestore\n\tunsubscribeFromSnapshot = null;\n\n\t//fetch the collections array from firestore with componentDidMount()\n\tcomponentDidMount() {\n\t\tconst collectionRef = firestore.collection(\"collections\");\n\t\tthis.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t\t\tconsole.log(collectionsMap);\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { match } = this.props;\n\t\treturn (\n\t\t\t<div className=\"shop-page\">\n\t\t\t\t<Route exact path={`${match.path}`} component={CollectionsOverview} />\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\t\tcomponent={CollectionPage}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tupdateCollections: collectionsMap =>\n\t\tdispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);\n"]},"metadata":{},"sourceType":"module"}