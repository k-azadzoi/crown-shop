{"ast":null,"code":"var _jsxFileName = \"/Users/k-charette/Desktop/repos/crown-shop/client/src/pages/shop/Shop.js\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop-actions\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/CollectionsOverviewContainer\";\nimport CollectionPageContainer from \"../collection/CollectionContainer\"; //convert functional component to a class component\n\nconst Shop = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]); //fetch the collections array from firestore with componentDidMount()\n  // componentDidMount() {\n  // \tconst { fetchCollectionsStart } = this.props;\n  // \tfetchCollectionsStart();\n  // }\n\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/k-charette/Desktop/repos/crown-shop/client/src/pages/shop/Shop.js"],"names":["React","useEffect","Route","connect","fetchCollectionsStart","CollectionsOverviewContainer","CollectionPageContainer","Shop","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,OAAOC,4BAAP,MAAyC,oEAAzC;AACA,OAAOC,uBAAP,MAAoC,mCAApC,C,CAEA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEH,EAAAA,qBAAF;AAAyBI,EAAAA;AAAzB,CAAD,KAAsC;AAClDP,EAAAA,SAAS,CAAC,MAAM;AACfG,IAAAA,qBAAqB;AACrB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT,CADkD,CAKlD;AACA;AACA;AACA;AACA;;AACA,SACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AACC,IAAA,KAAK,MADN;AAEC,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,EAFrB;AAGC,IAAA,SAAS,EAAEJ,4BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAMC,oBAAC,KAAD;AACC,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBADrB;AAEC,IAAA,SAAS,EAAEH,uBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CADD;AAaA,CAvBD;;AAyBA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACvCP,EAAAA,qBAAqB,EAAE,MAAMO,QAAQ,CAACP,qBAAqB,EAAtB;AADE,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOO,kBAAP,CAAP,CAAkCH,IAAlC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { fetchCollectionsStart } from \"../../redux/shop/shop-actions\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/CollectionsOverviewContainer\";\nimport CollectionPageContainer from \"../collection/CollectionContainer\";\n\n//convert functional component to a class component\nconst Shop = ({ fetchCollectionsStart, match }) => {\n\tuseEffect(() => {\n\t\tfetchCollectionsStart();\n\t}, [fetchCollectionsStart]);\n\n\t//fetch the collections array from firestore with componentDidMount()\n\t// componentDidMount() {\n\t// \tconst { fetchCollectionsStart } = this.props;\n\t// \tfetchCollectionsStart();\n\t// }\n\treturn (\n\t\t<div className=\"shop-page\">\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath={`${match.path}`}\n\t\t\t\tcomponent={CollectionsOverviewContainer}\n\t\t\t/>\n\t\t\t<Route\n\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\tcomponent={CollectionPageContainer}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst mapDispatchToProps = dispatch => ({\n\tfetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);\n"]},"metadata":{},"sourceType":"module"}